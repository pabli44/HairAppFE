{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment, servicesNames } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ServiceEService = /*#__PURE__*/(() => {\n  class ServiceEService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.url;\n      this.headers = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    saveServiceE(service) {\n      return this.http.post(this.url + servicesNames.services, service, this.headers);\n    }\n    updateServiceE(id, service) {\n      return this.http.put(this.url + servicesNames.services + \"/\" + id, service, this.headers);\n    }\n    deleteServiceE(id) {\n      return this.http.delete(this.url + servicesNames.services + \"/\" + id, this.headers);\n    }\n    getServiceE(id) {\n      return this.http.get(this.url + servicesNames.services + \"/\" + id, this.headers);\n    }\n    getServiceEByTypeService(typeService) {\n      return this.http.get(this.url + servicesNames.services + \"?typeServiceParam=\" + typeService, this.headers);\n    }\n    getServicesE() {\n      return this.http.get(this.url + servicesNames.services);\n    }\n    static {\n      this.ɵfac = function ServiceEService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ServiceEService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ServiceEService,\n        factory: ServiceEService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ServiceEService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}