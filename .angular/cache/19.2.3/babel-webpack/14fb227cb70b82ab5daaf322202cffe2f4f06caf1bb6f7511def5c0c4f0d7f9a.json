{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment, servicesNames } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TransactionService = /*#__PURE__*/(() => {\n  class TransactionService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.url;\n      this.headers = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    saveTransaction(transaction) {\n      return this.http.post(this.url + servicesNames.transactions, transaction, this.headers);\n    }\n    updateTransaction(id, transaction) {\n      return this.http.put(this.url + servicesNames.transactions + \"/\" + id, transaction, this.headers);\n    }\n    deleteTransaction(id) {\n      return this.http.delete(this.url + servicesNames.transactions + \"/\" + id, this.headers);\n    }\n    getTransaction(id) {\n      return this.http.get(this.url + servicesNames.transactions + \"/\" + id, this.headers);\n    }\n    getTransactionByType(type) {\n      return this.http.get(this.url + servicesNames.transactions + \"?typeTransactionParam=\" + type, this.headers);\n    }\n    getTransactions() {\n      return this.http.get(this.url + servicesNames.transactions);\n    }\n    static {\n      this.ɵfac = function TransactionService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TransactionService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: TransactionService,\n        factory: TransactionService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return TransactionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}