{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { environment, servicesNames } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AdressService = /*#__PURE__*/(() => {\n  class AdressService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.url;\n      this.headers = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    saveAdress(adress) {\n      return this.http.post(this.url + servicesNames.adresses, adress, this.headers).subscribe();\n    }\n    // HttpClient API post() method => Create employee\n    // saveAdress(adress: Adress): Observable<Adress> {\n    //     return this.http.post<Adress>(this.url + servicesNames.adresses, JSON.stringify(adress), this.headers)\n    //     .pipe(\n    //     retry(1),\n    //     catchError(this.handleError)\n    //     )\n    // }  \n    updateAdress(id, adress) {\n      return this.http.put(this.url + servicesNames.adresses + \"/\" + id, adress, this.headers);\n    }\n    deleteAdress(id) {\n      return this.http.delete(this.url + servicesNames.adresses + \"/\" + id, this.headers);\n    }\n    getAdress(id) {\n      return this.http.get(this.url + servicesNames.adresses + \"/\" + id, this.headers);\n    }\n    getAdressByUser(user) {\n      return this.http.get(this.url + servicesNames.adresses + \"?userParam=\" + user, this.headers);\n    }\n    getAdresses() {\n      return this.http.get(this.url + servicesNames.adresses);\n    }\n    // Error handling \n    handleError(error) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        // Get client-side error\n        errorMessage = error.error.message;\n      } else {\n        // Get server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n      window.alert(errorMessage);\n      return throwError(errorMessage);\n    }\n    static {\n      this.ɵfac = function AdressService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AdressService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AdressService,\n        factory: AdressService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AdressService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}