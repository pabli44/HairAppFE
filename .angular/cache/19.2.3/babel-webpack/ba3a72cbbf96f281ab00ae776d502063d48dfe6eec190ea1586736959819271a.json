{"ast":null,"code":"import { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { UserService } from '../../services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(userService, toastr, router, formBuilder) {\n      this.userService = userService;\n      this.toastr = toastr;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.title = 'Login Page';\n      this.isData = false;\n      this.onSubmit = () => {\n        try {\n          this.email = this.loginForm.get('email').value;\n          this.password = this.loginForm.get('password').value;\n          this.profile = this.loginForm.get('profile').value;\n          //consulta de usuario por email\n          this.userService.getUserByEmail(this.email).toPromise().then(res => {\n            this.userArray = res;\n            if (this.userArray.length > 1) {\n              if (this.userArray[0].profile.profileId == this.profile && this.userArray[0].password === this.password) {\n                this.toastr.success('Your login was successfully', 'login Messages: ');\n                this.showName = this.userArray[0].name;\n                this.userIdToSession = this.userArray[0].userId;\n                this.isData = true;\n              } else if (this.userArray[1].profile.profileId == this.profile && this.userArray[1].password === this.password) {\n                this.toastr.success('Your login was successfully', 'login Messages: ');\n                this.showName = this.userArray[1].name;\n                this.userIdToSession = this.userArray[1].userId;\n                this.isData = true;\n              } else {\n                this.toastr.error('Please, confirm your data', 'login Messages: ');\n              }\n              //return;\n            } else if (this.userArray[0].profile.profileId == this.profile && this.userArray[0].password === this.password) {\n              this.toastr.success('Your login was successfully', 'login Messages: ');\n              this.showName = this.userArray[0].name;\n              this.userIdToSession = this.userArray[0].userId;\n              this.isData = true;\n            } else {\n              this.toastr.error('Please, confirm your data', 'login Messages: ');\n            }\n            if (this.isData) {\n              if (this.profile == 1) {\n                localStorage.setItem(\"UserSession\", this.userIdToSession);\n                this.router.navigate(['/profile/client'], {\n                  queryParams: {\n                    name: this.showName\n                  }\n                });\n              } else {\n                localStorage.setItem(\"UserSession\", this.userIdToSession);\n                this.router.navigate(['/profile/professional'], {\n                  queryParams: {\n                    name: this.showName\n                  }\n                });\n              }\n            }\n          });\n        } catch (error) {\n          console.log(\"API fails\");\n          alert(error);\n        }\n      };\n      this.loginForm = this.formBuilder.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n        profile: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      if (localStorage.getItem(\"UserSession\")) {\n        localStorage.clear();\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"login\"]],\n        decls: 25,\n        vars: 3,\n        consts: [[1, \"container\", \"m-5\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\", \"w-25\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"profile\"], [\"formControlName\", \"profile\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"0\", \"disabled\", \"\", 3, \"selected\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(2, \"h2\");\n            i0.ɵɵtext(3, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Email:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n            i0.ɵɵtext(10, \"Password:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Profile:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"select\", 8)(16, \"option\", 9);\n            i0.ɵɵtext(17, \"Choose one...\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"option\", 10);\n            i0.ɵɵtext(19, \"Client\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"option\", 11);\n            i0.ɵɵtext(21, \"Professional\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelement(22, \"br\");\n            i0.ɵɵelementStart(23, \"button\", 12);\n            i0.ɵɵtext(24, \"Login\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(15);\n            i0.ɵɵproperty(\"selected\", true);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n          }\n        },\n        dependencies: [RouterModule],\n        encapsulation: 2\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}